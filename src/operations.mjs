import binaryen from "binaryen";

export default {
    ["unary" + binaryen.ClzInt32]: "__clz_i32($)",
    ["unary" + binaryen.CtzInt32]: "__ctz_i32($)",
    ["unary" + binaryen.PopcntInt32]: "__popcnt_i32($)",
    ["unary" + binaryen.NegFloat32]: "(0.0 - $)",
    ["unary" + binaryen.AbsFloat32]: "__abs_f32($)",
    ["unary" + binaryen.CeilFloat32]: "__ceil_f32($)",
    ["unary" + binaryen.FloorFloat32]: "__floor_f32($)",
    ["unary" + binaryen.TruncFloat32]: "__trunc_f32($)",
    ["unary" + binaryen.NearestFloat32]: "__nearest_f32($)",
    ["unary" + binaryen.SqrtFloat32]: "__sqrt_f32($)",
    ["unary" + binaryen.EqZInt32]: "($ == 0x0)",
    ["unary" + binaryen.ClzInt64]: "__clz_i64($)",
    ["unary" + binaryen.CtzInt64]: "__ctz_i64($)",
    ["unary" + binaryen.PopcntInt64]: "__popcnt_i64($)",
    ["unary" + binaryen.NegFloat64]: "(0.0 - $)",
    ["unary" + binaryen.AbsFloat64]: "__abs_f64($)",
    ["unary" + binaryen.CeilFloat64]: "__ceil_f64($)",
    ["unary" + binaryen.FloorFloat64]: "__floor_f64($)",
    ["unary" + binaryen.TruncFloat64]: "__trunc_f64($)",
    ["unary" + binaryen.NearestFloat64]: "__nearest_f64($)",
    ["unary" + binaryen.SqrtFloat64]: "__sqrt_f64($)",
    ["unary" + binaryen.EqZInt64]: "($ == 0x0)",
    ["unary" + binaryen.ExtendSInt32]: "((long) $)",
    ["unary" + binaryen.ExtendUInt32]: "((unsigned long) $)",
    ["unary" + binaryen.WrapInt64]: "((int) $)",
    ["unary" + binaryen.TruncSFloat32ToInt32]: "((int) $)",
    ["unary" + binaryen.TruncSFloat32ToInt64]: "((long) $)",
    ["unary" + binaryen.TruncUFloat32ToInt32]: "((unsigned int) $)",
    ["unary" + binaryen.TruncUFloat32ToInt64]: "((unsigned long) $)",
    ["unary" + binaryen.TruncSFloat64ToInt32]: "((int) $)",
    ["unary" + binaryen.TruncSFloat64ToInt64]: "((long) $)",
    ["unary" + binaryen.TruncUFloat64ToInt32]: "((unsigned int) $)",
    ["unary" + binaryen.TruncUFloat64ToInt64]: "((unsigned long) $)",
    ["unary" + binaryen.TruncSatSFloat32ToInt32]: "((int) /* sat */ $)",
    ["unary" + binaryen.TruncSatSFloat32ToInt64]: "((long) /* sat */ $)",
    ["unary" + binaryen.TruncSatUFloat32ToInt32]: "((unsigned int) /* sat */ $)",
    ["unary" + binaryen.TruncSatUFloat32ToInt64]: "((unsigned long) /* sat */ $)",
    ["unary" + binaryen.TruncSatSFloat64ToInt32]: "((int) /* sat */ $)",
    ["unary" + binaryen.TruncSatSFloat64ToInt64]: "((long) /* sat */ $)",
    ["unary" + binaryen.TruncSatUFloat64ToInt32]: "((unsigned int) /* sat */ $)",
    ["unary" + binaryen.TruncSatUFloat64ToInt64]: "((unsigned long) /* sat */ $)",
    ["unary" + binaryen.ReinterpretFloat32]: "__reinterpret_f32/* bitwise reinterpret*/($)",
    ["unary" + binaryen.ReinterpretFloat64]: "__reinterpret_f64/* bitwise reinterpret*/($)",
    ["unary" + binaryen.ConvertSInt32ToFloat32]: "((int) $)",
    ["unary" + binaryen.ConvertSInt32ToFloat64]: "((long) $)",
    ["unary" + binaryen.ConvertUInt32ToFloat32]: "((unsigned int) $)",
    ["unary" + binaryen.ConvertUInt32ToFloat64]: "((unsigned long) $)",
    ["unary" + binaryen.ConvertSInt64ToFloat32]: "((int) $)",
    ["unary" + binaryen.ConvertSInt64ToFloat64]: "((long) $)",
    ["unary" + binaryen.ConvertUInt64ToFloat32]: "((unsigned int) $)",
    ["unary" + binaryen.ConvertUInt64ToFloat64]: "((unsigned long) $)",
    ["unary" + binaryen.PromoteFloat32]: "__promote_f32tof64($)",
    ["unary" + binaryen.DemoteFloat64]: "__demote_f64tof32($)",
    ["unary" + binaryen.ReinterpretInt32]: "__reinterpret_i32/* bitwise reinterpret */($)",
    ["unary" + binaryen.ReinterpretInt64]: "__reinterpret_i64/* bitwise reinterpret */($)",
    ["unary" + binaryen.ExtendS8Int32]: "((int) $)",
    ["unary" + binaryen.ExtendS16Int32]: "((int) $)",
    ["unary" + binaryen.ExtendS8Int64]: "((long) $)",
    ["unary" + binaryen.ExtendS16Int64]: "((long) $)",
    ["unary" + binaryen.ExtendS32Int64]: "((long) $)",
    ["binary" + binaryen.AddInt64]: "($ + #)",
    ["binary" + binaryen.AddFloat32]: "($ + #)",
    ["binary" + binaryen.AddFloat64]: "($ + #)",
    ["binary" + binaryen.AddInt32]: "($ + #)",
    ["binary" + binaryen.SubInt64]: "($ - #)",
    ["binary" + binaryen.SubFloat32]: "($ - #)",
    ["binary" + binaryen.SubFloat64]: "($ - #)",
    ["binary" + binaryen.SubInt32]:  "($ - #)",
    ["binary" + binaryen.MulInt64]: "($ * #)",
    ["binary" + binaryen.MulFloat32]: "($ * #)",
    ["binary" + binaryen.MulFloat64]: "($ * #)",
    ["binary" + binaryen.MulInt32]:  "($ * #)",
    ["binary" + binaryen.DivSInt64]: "($ / #)",
    ["binary" + binaryen.DivFloat32]: "($ / #)",
    ["binary" + binaryen.DivFloat64]: "($ / #)",
    ["binary" + binaryen.DivSInt32]:  "($ / #)",
    ["binary" + binaryen.DivUInt32]: "((unsigned) $ / #)",
    ["binary" + binaryen.RemSInt64]: "($ % #)",
    ["binary" + binaryen.RemSInt32]: "($ % #)",
    ["binary" + binaryen.RemUInt32]: "((unsigned) $ % #)",
    ["binary" + binaryen.AndInt64]: "($ & #)",
    ["binary" + binaryen.AndInt32]: "($ & #)",
    ["binary" + binaryen.OrInt64]:"($ | #)",
    ["binary" + binaryen.OrInt32]: "($ | #)",
    ["binary" + binaryen.XorInt64]: "($ ^ #)",
    ["binary" + binaryen.XorInt32]: "($ ^ #)",
    ["binary" + binaryen.ShlInt64]: "($ << #)",
    ["binary" + binaryen.ShlInt32]:  "($ << #)",
    ["binary" + binaryen.ShrUInt64]: "($ >>> #)",
    ["binary" + binaryen.ShrUInt32]:  "($ >>> #)",
    ["binary" + binaryen.ShrSInt64]: "($ >> #)",
    ["binary" + binaryen.ShrSInt32]:  "($ >> #)",
    ["binary" + binaryen.RotLInt32]: "__rotl_i32($, #)",
    ["binary" + binaryen.RotRInt32]: "__rotr_i32($, #)",
    ["binary" + binaryen.EqInt64]: "($ == #)",
    ["binary" + binaryen.EqFloat32]: "($ == #)",
    ["binary" + binaryen.EqFloat64]: "($ == #)",
    ["binary" + binaryen.EqInt32]: "($ == #)",
    ["binary" + binaryen.NeInt64]: "($ != #)",
    ["binary" + binaryen.NeFloat32]: "($ != #)",
    ["binary" + binaryen.NeFloat64]: "($ != #)",
    ["binary" + binaryen.NeInt32]: "($ != #)",
    ["binary" + binaryen.LtSInt64]: "($ < #)",
    ["binary" + binaryen.LtFloat64]: "($ < #)",
    ["binary" + binaryen.LtFloat32]: "($ < #)",
    ["binary" + binaryen.LtSInt32]: "($ < #)",
    ["binary" + binaryen.LtUInt64]: "((unsigned) $ < #)",
    ["binary" + binaryen.LtUInt32]: "((unsigned) $ < #)",
    ["binary" + binaryen.LeSInt64]: "($ <= #)",
    ["binary" + binaryen.LeFloat64]: "($ <= #)",
    ["binary" + binaryen.LeFloat32]: "($ <= #)",
    ["binary" + binaryen.LeSInt32]:  "($ <= #)",
    ["binary" + binaryen.LeUInt64]: "((unsigned) $ <= #)",
    ["binary" + binaryen.LeUInt32]: "((unsigned) $ <= #)",
    ["binary" + binaryen.GtSInt64]: "($ > #)",
    ["binary" + binaryen.GtFloat64]: "($ > #)",
    ["binary" + binaryen.GtFloat32]: "($ > #)",
    ["binary" + binaryen.GtSInt32]: "($ > #)",
    ["binary" + binaryen.GtUInt64]: "((unsigned) $ > #)",
    ["binary" + binaryen.GtUInt32]: "((unsigned) $ > #)",
    ["binary" + binaryen.GeSInt64]: "($ >= #)",
    ["binary" + binaryen.GeFloat64]: "($ >= #)",
    ["binary" + binaryen.GeFloat32]: "($ >= #)",
    ["binary" + binaryen.GeSInt32]: "($ >= #)",
    ["binary" + binaryen.GeUInt64]: "((unsigned) $ >= #)",
    ["binary" + binaryen.GeUInt32]: "((unsigned) $ >= #)",
    ["binary" + binaryen.DivUInt64]: "((unsigned) $ / #)",
    ["binary" + binaryen.RemUInt64]: "((unsigned) $ % #)",
    ["binary" + binaryen.RotLInt64]: "__rotl_i64($, #)",
    ["binary" + binaryen.RotRInt64]: "__rotr_i64($, #)",
    ["binary" + binaryen.CopySignFloat32]: "__copy_sign_f32($, #)",
    ["binary" + binaryen.MinFloat32]: "__min_f32($, #)",
    ["binary" + binaryen.MaxFloat32]: "__max_f32($, #)",
    ["binary" + binaryen.CopySignFloat64]: "__copy_sign_f64($, #)",
    ["binary" + binaryen.MinFloat64]: "__min_f64($, #)",
    ["binary" + binaryen.MaxFloat64]: "__max_f64($, #)",
}
